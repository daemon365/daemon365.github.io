<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wire on Daemon</title><link>https://daemon365.dev/tags/wire/</link><description>Recent content in Wire on Daemon</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 30 Sep 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://daemon365.dev/tags/wire/index.xml" rel="self" type="application/rss+xml"/><item><title>Go工程化 - 依赖注入</title><link>https://daemon365.dev/2021/09/30/go%E5%B7%A5%E7%A8%8B%E5%8C%96-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2021/09/30/go%E5%B7%A5%E7%A8%8B%E5%8C%96-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid><description>我们在微服务框架kratos v2的默认项目模板中kratos-layout使用了google/wire进行依赖注入，也建议开发者在维护项目时使用该工具。 wire 乍看起来比较违反直觉，导致很多同学不理解为什么</description></item></channel></rss>