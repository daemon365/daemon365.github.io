<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gin on Daemon</title><link>https://daemon365.dev/tags/gin/</link><description>Recent content in Gin on Daemon</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 23 Dec 2019 00:00:00 +0800</lastBuildDate><atom:link href="https://daemon365.dev/tags/gin/index.xml" rel="self" type="application/rss+xml"/><item><title>nethttp和gin 路由</title><link>https://daemon365.dev/2019/12/23/nethttp%E5%92%8Cgin-%E8%B7%AF%E7%94%B1/</link><pubDate>Mon, 23 Dec 2019 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2019/12/23/nethttp%E5%92%8Cgin-%E8%B7%AF%E7%94%B1/</guid><description>net/http 路由注册 func test1() { http.HandleFunc(&amp;quot;/&amp;quot;, func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, &amp;quot;Hello world!&amp;quot;) }) err := http.ListenAndServe(&amp;quot;:9001&amp;quot;, nil) if err != nil { log.Fatal(&amp;quot;ListenAndServer:&amp;quot;, err) } } 在使用ListenAndServe这个方法时，系统就会给我们指派一个路由器，DefaultServeMux是系统默认使用的路由器，如果Li</description></item><item><title>Gin框架介绍及使用</title><link>https://daemon365.dev/2019/06/30/gin%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 30 Jun 2019 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2019/06/30/gin%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid><description>Gin框架介绍 基于httprouter开发的Web框架。 中文文档，齐全。 简单易用的轻量级框架。 Gin框架安装 go get -u github.com/gin-gonic/gin 实例: package main import ( &amp;quot;fmt&amp;quot; &amp;quot;github.com/gin-gonic/gin&amp;quot; ) func main() { r := gin.Default() // 创建一个默认的路由引擎 // 也可以用gin.New()</description></item></channel></rss>