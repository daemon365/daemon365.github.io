<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Daemon</title><link>https://daemon365.dev/tags/kubernetes/</link><description>Recent content in Kubernetes on Daemon</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 15 Jun 2024 16:14:00 +0800</lastBuildDate><atom:link href="https://daemon365.dev/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>boltdb 原理</title><link>https://daemon365.dev/2024/06/15/boltdb-%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 15 Jun 2024 16:14:00 +0800</pubDate><guid>https://daemon365.dev/2024/06/15/boltdb-%E5%8E%9F%E7%90%86/</guid><description>简介 介绍及简单使用：https://www.cnblogs.com/daemon365/p/17690167.html 源码地址：https://github.com/etcd-io/bbolt page 因为 boltdb</description></item><item><title>etcd watch 实现原理</title><link>https://daemon365.dev/2024/06/10/etcd-watch-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 10 Jun 2024 14:16:00 +0800</pubDate><guid>https://daemon365.dev/2024/06/10/etcd-watch-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid><description>介绍 在 etcd 中，watch 是一个非常重要的特性，它可以让客户端监控 etcd 中的 key 或者一组 key，当 key 发生变化时，etcd 会通知客户端。本文将介绍 etcd watch 的实现原理。 etcdctl watch /test # 当 /test 的值发生变化时，会输出如下信息 PUT /test a PUT</description></item><item><title>etcd MVCC 存储结构及流程</title><link>https://daemon365.dev/2024/05/26/etcd-mvcc-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 26 May 2024 18:00:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/26/etcd-mvcc-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E6%B5%81%E7%A8%8B/</guid><description>什么是 MVCC MVCC 是 Multi-Version Concurrency Control 的缩写，即多版本并发控制。它是一种并发控制的方法，用于在数据库系统中实现事务的隔离性。MVCC 是一种乐观锁机制，它通过保存数据的多个版本来实现事务的隔禽性。在 etcd 中，MVCC 是用于实现</description></item><item><title>istio sidecar 工作方式</title><link>https://daemon365.dev/2024/05/12/istio-sidecar-%E5%B7%A5%E4%BD%9C%E6%96%B9%E5%BC%8F/</link><pubDate>Sun, 12 May 2024 17:40:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/12/istio-sidecar-%E5%B7%A5%E4%BD%9C%E6%96%B9%E5%BC%8F/</guid><description>istio 是什么 Istio 是一个开放源代码的服务网格，它为基于微服务的应用程序提供了一种统一的方式来连接、保护、监控和管理服务。Istio 主要解决的是在微服务架构中的服务间通信的复杂性问题，它通过提供服务间的负载均衡</description></item><item><title>docker containerd runc containerd-shim等组件的关系</title><link>https://daemon365.dev/2024/05/09/docker-containerd-runc-containerd-shim%E7%AD%89%E7%BB%84%E4%BB%B6%E7%9A%84%E5%85%B3%E7%B3%BB/</link><pubDate>Thu, 09 May 2024 20:56:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/09/docker-containerd-runc-containerd-shim%E7%AD%89%E7%BB%84%E4%BB%B6%E7%9A%84%E5%85%B3%E7%B3%BB/</guid><description>早期 kubelet 创建容器工作原理 因为 docker 出生的比 k8s 早，所以 k8s 早期的容器运行时都是基于 docker 的，kubelet 通过 docker 的 api 创建容器。后来，k8s 官方不想绑死在 docker 这架马车上，就把容器运行时抽象出来，定义了一个接口，叫 CRI (container runtime</description></item><item><title>boltdb 介绍</title><link>https://daemon365.dev/2024/05/08/boltdb-%E4%BB%8B%E7%BB%8D/</link><pubDate>Wed, 08 May 2024 20:56:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/08/boltdb-%E4%BB%8B%E7%BB%8D/</guid><description>介绍 BoltDB 是一个用 Go 语言编写的嵌入式键/值数据库。以下是关于 BoltDB 的一些基本介绍： 键/值存储: BoltDB 为应用程序提供了简单的键/值存储接口。 事务: BoltDB 支持完整的 ACID 事务。 嵌入式: 与像 MySQL 或 PostgreSQL 这样的数据库系统不同，Bolt</description></item><item><title>kube-proxy 流量流转方式</title><link>https://daemon365.dev/2024/05/08/kube-proxy-%E6%B5%81%E9%87%8F%E6%B5%81%E8%BD%AC%E6%96%B9%E5%BC%8F/</link><pubDate>Wed, 08 May 2024 17:40:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/08/kube-proxy-%E6%B5%81%E9%87%8F%E6%B5%81%E8%BD%AC%E6%96%B9%E5%BC%8F/</guid><description>简介 kube-proxy 是 Kubernetes 集群中负责服务发现和负载均衡的组件之一。它是一个网络代理，运行在每个节点上, 用于 service 资源的负载均衡。它有两种模式：iptables 和 ipvs。 iptables iptables 是 Linux 系统中的一个用户空间实用程序，用于配置内核</description></item><item><title>kubernetes 存储流程</title><link>https://daemon365.dev/2024/05/03/kubernetes-%E5%AD%98%E5%82%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 03 May 2024 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/03/kubernetes-%E5%AD%98%E5%82%A8%E6%B5%81%E7%A8%8B/</guid><description>PV 与 PVC PVC (PersistentVolumeClaim)，命名空间（namespace）级别的资源，由 用户 or StatefulSet 控制器（根据VolumeClaimTemplate） 创建。PVC 类似于 Pod，Pod 消耗 Node 资</description></item><item><title>kubelet 原理分析</title><link>https://daemon365.dev/2024/05/01/kubelet-%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</link><pubDate>Wed, 01 May 2024 12:40:00 +0800</pubDate><guid>https://daemon365.dev/2024/05/01/kubelet-%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</guid><description>Reference https://atbug.com/kubelet-source-code-analysis/ kubelet 简介 kubernetes 分为控制面和数据面，kubelet 就是数据面最主要的组件，在每个节点上启动，主要负责容器的创建、启停、监控、日志收集等工作。它是一个在每个集群节点上运行的代理，负责确保节点上的容器根据Po</description></item><item><title>kubernetes CNI(Container Network Inferface)</title><link>https://daemon365.dev/2024/04/20/kubernetes-cnicontainer-network-inferface/</link><pubDate>Sat, 20 Apr 2024 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2024/04/20/kubernetes-cnicontainer-network-inferface/</guid><description>为什么需要 CNI 在 kubernetes 中，pod 的网络是使用 network namespace 隔离的，但是我们有时又需要互相访问网络，这就需要一个网络插件来实现 pod 之间的网络通信。CNI 就是为了解决这个问题而诞生的。CNI 是 container network interface 的缩写，它是一个规范，定</description></item><item><title>kubernetes client-go功能介绍</title><link>https://daemon365.dev/2024/03/08/kubernetes-client-go%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 08 Mar 2024 17:11:00 +0800</pubDate><guid>https://daemon365.dev/2024/03/08/kubernetes-client-go%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/</guid><description>原文地址 https://haiyux.cc/2023/02/26/k8s-client-go/ client-go是什么？ client-go是Kubernetes官方提供的Go语言客户端库，用于与Kubernetes API服务器交互。使用client-go，您可以编写Go语言程序来创建</description></item><item><title>容器启动流程（containerd 和 runc）</title><link>https://daemon365.dev/2023/12/07/%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8Bcontainerd-%E5%92%8C-runc/</link><pubDate>Thu, 07 Dec 2023 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2023/12/07/%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8Bcontainerd-%E5%92%8C-runc/</guid><description>启动流程 containerd 作为一个 api 服务，提供了一系列的接口供外部调用，比如创建容器、删除容器、创建镜像、删除镜像等等。使用 docker 和 ctr 等工具，都是通过调用 containerd 的 api 来实现的。 kubelet 通过 cri 调用 containerd 和这些不一样，后续我会介绍到。 containerd 创建</description></item><item><title>kubernetes container device interface (CDI)</title><link>https://daemon365.dev/2023/11/19/kubernetes-container-device-interface-cdi/</link><pubDate>Sun, 19 Nov 2023 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2023/11/19/kubernetes-container-device-interface-cdi/</guid><description>CDI 是什么？ Container Device Interface (CDI) 是一个提议的标准，它定义了如何在容器运行时环境中向容器提供设备。这个提议的目的是使得设备供应商能够更容易地将其设备集成到 Kubernetes 集群中，而不必修改 Kubernetes 核心代码。 CDI 插件通常负责： 配置设备以供容</description></item><item><title>容器基础-- namespace,Cgroup 和 UnionFS</title><link>https://daemon365.dev/2023/06/24/%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80--namespacecgroup-%E5%92%8C-unionfs/</link><pubDate>Sat, 24 Jun 2023 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2023/06/24/%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80--namespacecgroup-%E5%92%8C-unionfs/</guid><description>Namespace 什么是 Namespace ？ 这里的 &amp;ldquo;namespace&amp;rdquo; 指的是 Linux namespace 技术，它是 Linux 内核实现的一种隔离方案。简而言之，Linux 操作系统能够为不同的进程分配不同的 namespace，每个 namespace 都具有独立的资源分配，从而实现了进程间的隔离。如果你的</description></item><item><title>golang操作etcd</title><link>https://daemon365.dev/2023/01/08/golang%E6%93%8D%E4%BD%9Cetcd/</link><pubDate>Sun, 08 Jan 2023 20:56:00 +0800</pubDate><guid>https://daemon365.dev/2023/01/08/golang%E6%93%8D%E4%BD%9Cetcd/</guid><description>etcd是近几年比较火热的一个开源的、分布式的键值对数据存储系统，提供共享配置、服务的注册和发现，本文主要介绍etcd的安装和使用。 etcd介绍 etcd是使用Go语言开发的一个开源的、高可用的分布式k</description></item><item><title>kubernetes集群最新版安装</title><link>https://daemon365.dev/2022/09/22/kubernetes%E9%9B%86%E7%BE%A4%E6%9C%80%E6%96%B0%E7%89%88%E5%AE%89%E8%A3%85/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2022/09/22/kubernetes%E9%9B%86%E7%BE%A4%E6%9C%80%E6%96%B0%E7%89%88%E5%AE%89%E8%A3%85/</guid><description>原文地址：https://haiyux.cc/2022/09/21/k8s-install/ 虚拟机准备 我这里准备了三台虚拟机，分别部署一个master和两个node，操作系统位ubuntu 20.04。</description></item><item><title>Prometheus</title><link>https://daemon365.dev/2021/08/20/prometheus/</link><pubDate>Fri, 20 Aug 2021 00:00:00 +0800</pubDate><guid>https://daemon365.dev/2021/08/20/prometheus/</guid><description>Prometheus简介 什么是 Prometheus Prometheus 是在 Soundcloud 以开源软件的形式进行研发的系统监控和告警工具包，自此以后，许多公司和组织都采用了 Prometheus 作为监控告警工具。Prometheus 的开发者和用户社区非常活跃，它现在是一个</description></item></channel></rss>